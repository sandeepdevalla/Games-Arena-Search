{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/app.service.ts","webpack:///src/app/dashboard/dashboard.component.ts","webpack:///src/app/dashboard/dashboard.component.html","webpack:///src/app/score-board/score-board.component.ts","webpack:///src/app/score-board/score-board.component.html","webpack:///src/app/score-card/score-card.component.ts","webpack:///src/app/score-card/score-card.component.html","webpack:///src/app/search/search.component.ts","webpack:///src/app/search/search.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","AppRoutingModule","forRoot","imports","AppComponent","appService","title","connectIndexedDb","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","AppService","http","gamesDataSubscriber$","url","get","db","data","scoresObjectStore","transaction","objectStore","forEach","gameData","add","res","getAll","onsuccess","next","target","result","getDataFromStarlord","subscribe","storeUsingTransaction","splice","error","console","log","dbInstance","window","indexedDB","open","onupgradeneeded","event","createObjectStore","createIndex","autoIncrement","storeGameDataInDb","index","deleteDatabase","unsubscribe","providedIn","DashboardComponent","gamesData","value","getFilterData","closeIDB","ScoreBoardComponent","changes","gamesArenaScores","currentValue","ScoreCardComponent","SearchComponent","searchTitle","games","emit","getRefreshList","searchGames","environment","production","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\n\r\nconst routes: Routes = [];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\r\nimport AppService from './app.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.sass']\r\n})\r\nexport class AppComponent {\r\n  title = 'myapp';\r\n  constructor(private appService: AppService) {\r\n    this.appService.connectIndexedDb()\r\n  }\r\n}\r\n","<app-dashboard></app-dashboard>","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { ScrollingModule } from '@angular/cdk/scrolling';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\n\r\nimport { DashboardComponent } from './dashboard/dashboard.component';\r\nimport { SearchComponent } from './search/search.component';\r\nimport { ScoreBoardComponent } from './score-board/score-board.component';\r\nimport { ScoreCardComponent } from './score-card/score-card.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    DashboardComponent,\r\n    SearchComponent,\r\n    ScoreBoardComponent,\r\n    ScoreCardComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    ScrollingModule \r\n  ],\r\n  providers: [HttpClientModule],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Injectable, OnDestroy } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport games from '../assets/games.json';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport default class AppService implements OnDestroy {\r\n  dbInstance;\r\n  gamesData;\r\n  gamesDataSubscriber$ =  new BehaviorSubject([]);\r\n  constructor(private http: HttpClient) { \r\n\r\n  }\r\n  getDataFromStarlord() {\r\n    const url = 'https://starlord.hackerearth.com/gamesarena';\r\n    return this.http.get(url);\r\n  }\r\n  storeUsingTransaction(db, data) {\r\n    var scoresObjectStore = db.transaction(\"scores\", \"readwrite\").objectStore(\"scores\");\r\n    data.forEach(gameData => {\r\n      scoresObjectStore.add(gameData);\r\n    });\r\n    var res = scoresObjectStore.getAll();\r\n    res.onsuccess = data => {\r\n      this.gamesDataSubscriber$.next(data.target.result);\r\n    }\r\n  }\r\n  storeGameDataInDb(db) {\r\n    this.getDataFromStarlord().subscribe((data: any[]) => { \r\n        this.storeUsingTransaction(db, data.splice(1));\r\n      },\r\n      error => {\r\n        console.log('inside error', error)\r\n        this.storeUsingTransaction(db, games);\r\n        \r\n      }\r\n      )\r\n  }\r\n  connectIndexedDb() {\r\n    this.dbInstance = window.indexedDB.open(\"GamesScoreData\");\r\n    this.dbInstance.onupgradeneeded = async event => {\r\n      var db = event.target['result'];\r\n      var objectStore = db.createObjectStore(\"scores\", {createIndex: 'title', autoIncrement:true})\r\n      objectStore.createIndex(\"title\", \"title\");\r\n      this.storeGameDataInDb(db);\r\n    }\r\n    this.dbInstance.onsuccess = event => {\r\n      var db = event.target['result'];\r\n      var res = db.transaction(\"scores\", \"readwrite\").objectStore(\"scores\").getAll();\r\n      res.onsuccess = data => {\r\n        this.gamesDataSubscriber$.next(data.target.result);\r\n      }\r\n    }\r\n  }\r\n  getFilterData(title) {\r\n    this.dbInstance = window.indexedDB.open(\"GamesScoreData\");\r\n    this.dbInstance.onsuccess = async event => {\r\n      var db = event.target['result'];\r\n      var scoresObjectStore = db.transaction(\"scores\", \"readwrite\").objectStore(\"scores\");\r\n      var index = scoresObjectStore.index('title');\r\n      if (title) {\r\n        var res = index.get(title);\r\n      } else {\r\n        var res = index.getAll();\r\n      }\r\n      res.onsuccess = data => {\r\n        console.log('inside  geet filter value +++', data.target.result);\r\n        this.gamesDataSubscriber$.next(title ? [data.target.result] : data.target.result);\r\n      }\r\n  }\r\n  }\r\n  closeIDB() {\r\n    console.log('inside close')\r\n    window.indexedDB.deleteDatabase(\"GamesScoreData\");\r\n    this.connectIndexedDb();\r\n  }\r\n  ngOnDestroy() {\r\n    this.gamesDataSubscriber$.unsubscribe();\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport AppService from '../app.service';\r\n\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  templateUrl: './dashboard.component.html',\r\n\r\n  styleUrls: ['./dashboard.component.sass']\r\n})\r\nexport class DashboardComponent implements OnInit{\r\n  gamesData;\r\n  constructor(public appService: AppService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.appService.gamesDataSubscriber$.subscribe(data => {\r\n      this.gamesData = data;\r\n    })\r\n  }\r\n  searchTitle(value) {\r\n    this.appService.getFilterData(value);\r\n  }\r\n  closeDB() {\r\n    this.appService.closeIDB();\r\n    this.gamesData = [];\r\n  }\r\n}\r\n","<h1 style=\"text-align: center;\">Welcome to San❤️Thara</h1>\r\n<!-- <button class=\"refresh-db\" (click) = \"closeDB()\"> Refresh Games From Service</button>\r\n<app-search (searchTitle) = \"searchTitle($event)\"></app-search>\r\n<app-score-board [gamesArenaScores] = \"gamesData\"></app-score-board> -->\r\n","import { Component, OnInit, Input, OnChanges, SimpleChange, SimpleChanges } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-score-board',\r\n  templateUrl: './score-board.component.html',\r\n  styleUrls: ['./score-board.component.sass']\r\n})\r\nexport class ScoreBoardComponent implements OnInit, OnChanges {\r\n  @Input()\r\n  gamesArenaScores;\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (changes.gamesArenaScores.currentValue) {\r\n      this.gamesArenaScores = changes.gamesArenaScores.currentValue;\r\n    }\r\n\r\n  }\r\n}\r\n","<div class=\"score-board-panel\">\r\n    <!-- cdkScrollable -->\r\n    <cdk-virtual-scroll-viewport itemSize = \"200\" minBufferPx = \"50\" maxBufferPx = \"50\" [style.width.%]=\"100\">\r\n        <ng-container *cdkVirtualFor=\"let gameData of gamesArenaScores\">\r\n            <app-score-card [gameData] = \"gameData\" class=\"score-card-layout\">\r\n            </app-score-card>\r\n        </ng-container>\r\n    </cdk-virtual-scroll-viewport>\r\n    <div *ngIf=\"gamesArenaScores && gamesArenaScores.length == 0\" class=\"no-data\"> \r\n        <p>Games are loading please wait or you can refresh the list</p>\r\n        <div class=\"loading-layout\">\r\n            <div class=\"bounce-ball\"></div>\r\n            <div class=\"bounce-ball\"></div>\r\n            <div class=\"bounce-ball\"></div>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-score-card',\r\n  templateUrl: './score-card.component.html',\r\n  styleUrls: ['./score-card.component.sass']\r\n})\r\nexport class ScoreCardComponent implements OnInit {\r\n  @Input()\r\n  gameData;\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"score-card\">\r\n    <div class=\"image-div\">\r\n        <img src=\"assets/avtar.jpeg\" class=\"image-frame\" alt=\"\">\r\n    </div>\r\n    <div class=\"title-div\">\r\n        <h3>{{gameData.title}}</h3>\r\n        <em>{{gameData.platform}}</em>\r\n        <img *ngIf=\"gameData['editors_choice'] == 'Y'\" style=\"float: right;\" src=\"assets/editor-choice.png\">\r\n    </div>\r\n    <div class=\"score-div\">\r\n        <p>Genre: {{gameData.genre}}  <span> {{gameData.score}}</span></p>\r\n    </div>\r\n</div>","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\r\nimport AppService from '../app.service';\r\n\r\n@Component({\r\n  selector: 'app-search',\r\n  templateUrl: './search.component.html',\r\n  styleUrls: ['./search.component.sass']\r\n})\r\n\r\nexport class SearchComponent implements OnInit {\r\n  constructor(private appService: AppService) { }\r\n  games;\r\n  @Output()\r\n  searchTitle = new EventEmitter();\r\n  ngOnInit(): void {\r\n    this.appService.gamesDataSubscriber$.subscribe(data => {\r\n      this.games = data;\r\n    })\r\n  }\r\n  getRefreshList(event) {\r\n    if (event.target.value == \"\") {\r\n      this.searchTitle.emit(event.target.value);\r\n    }\r\n  }\r\n  searchGames(event) {\r\n    this.searchTitle.emit(event.target.value);\r\n  }\r\n}\r\n","<input type=\"search\" list=\"gamesList\" class=\"game-search\" (input) = \"getRefreshList($event)\" (change) = \"searchGames($event)\" placeholder=\"Search by (Title)\">\r\n<datalist id=\"gamesList\">\r\n    <option value=\"{{game.title}}\" *ngFor=\"let game of games\"></option>\r\n</datalist>","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"]}